-- 3.1 Select all warehouses.

	SELECT * FROM warehouses;

-- 3.2 Select all boxes with a value larger than $150.

	SELECT * FROM boxes WHERE value > 150;

-- 3.3 Select all distinct contents in all the boxes.

	SELECT DISTINCT contents FROM boxes;

-- 3.4 Select the average value of all the boxes.

	SELECT AVG(value) AS average_value FROM boxes;

-- 3.5 Select the warehouse code and the average value of the boxes in each warehouse.

	SELECT w.code AS warehouse_code, AVG(b.value) AS average_box_value FROM warehouses w LEFT JOIN boxes b ON w.code = b.warehouse GROUP BY w.code;

-- 3.6 Same as previous exercise, but select only those warehouses where the average value of the boxes is greater than 150.

	SELECT w.code AS warehouse_code, AVG(b.value) AS average_box_value FROM warehouses w LEFT JOIN boxes b ON w.code = b.warehouse GROUP BY w.code HAVING AVG(b.value) > 150;

-- 3.7 Select the code of each box, along with the name of the city the box is located in.

	SELECT b.code AS box_code, w.location AS city_name FROM boxes b LEFT JOIN warehouses w ON b.warehouse = w.code;

-- 3.8 Select the warehouse codes, along with the number of boxes in each warehouse. 
 Optionally, take into account that some warehouses are empty (i.e., the box count should show up as zero, instead of omitting the warehouse from the result).

	SELECT w.code AS warehouse_code, COALESCE(COUNT(b.code), 0) AS box_count FROM warehouses w LEFT JOIN boxes b ON w.code = b.warehouse GROUP BY w.code;

-- 3.9 Select the codes of all warehouses that are saturated (a warehouse is saturated if the number of boxes in it is larger than the warehouse's capacity).

	SELECT w.code AS warehouse_code FROM warehouses w LEFT JOIN (SELECT warehouse, COUNT(*) AS box_count FROM boxes GROUP BY warehouse) b ON w.code = b.warehouse WHERE b.box_count > w.capacity;

-- 3.10 Select the codes of all the boxes located in Chicago.

	SELECT b.code AS box_code FROM boxes b LEFT JOIN warehouses w ON b.warehouse = w.code WHERE w.location = 'Chicago';

-- 3.11 Create a new warehouse in New York with a capacity for 3 boxes.

	INSERT INTO warehouses (code, location, capacity)
	VALUES ('NYC1', 'New York', 3);

-- 3.12 Create a new box, with code "H5RT", containing "Papers" with a value of $200, and located in warehouse 2.

	INSERT INTO boxes (code, contents, value, warehouse)
	VALUES ('H5RT', 'Papers', 200, 2);

-- 3.13 Reduce the value of all boxes by 15%.

	UPDATE boxes SET value = value * 0.85;

-- 3.14 Remove all boxes with a value lower than $100.

	DELETE FROM boxes WHERE value < 100;

-- 3.15Remove all boxes from saturated warehouses.
DELETE FROM boxes WHERE warehouse IN (SELECT w.code FROM warehouses w LEFT JOIN (SELECT warehouse, COUNT(*) AS box_count FROM boxes GROUP BY warehouse) b ON w.code = b.warehouse WHERE b.box_count > w.capacity);

-- 3.16 Add Index for column "Warehouse" in table "boxes".

	CREATE INDEX idx_warehouse ON boxes (warehouse);

-- 3.17 Print all the existing indexes.

	SHOW INDEX FROM boxes;

-- 3.18 Remove (drop) the index you added just

	DROP INDEX idx_warehouse ON boxes;