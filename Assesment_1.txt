-- 1a. Select all columns from the actor table.

	SELECT * FROM ACCTOR;

-- 1b. Select only the last_name column from the actor table.

	SELECT LAST_NAME FROM ACTOR;

-- 1c. Select only the following columns from the film table.
-- COLUMN NAME           Note
-- title                 Exists in film table.
-- description           Exists in film table.
-- rental_duration       Exists in film table.
-- rental_rate           Exists in film table.
-- total_rental_cost     rental_duration * rental_rate.

	SELECT TITLE,DESCRIPTION,RENTAL_DURATION,RENTAL_RATE,RENTAL_RATE*RENTAL_DURATION AS TOTAL_RENTAL_COST FROM FILM;

-- 2a. Select all distinct (different) last names from the actor table.

	SELECT DISTINCT LAST_NAME FROM ACTOR;

-- 2b. Select all distinct (different) postal codes from the address table.

	SELECT DISTINCT POSTAL_CODE FROM ADDRESS;

-- 2c. Select all distinct (different) ratings from the film table.

	SELECT DISTINCT RATING FROM FILM;

-- 3a. Select the title, description, rating, movie length columns from the films table that last 3 hours or longer.

	SELECT TITLE,DESCRIPTION,RATING,LENGTH FROM FILM WHERE LENGTH>=180;

-- 3b. Select the payment id, amount, and payment date columns from the payments table for payments made on or after 05/27/2005.

	SELECT PAYMENT_ID,AMOUNT,PAYMENT_DATE FROM PAYMENT WHERE PAYMENT_DATE>='2005-05-27';

-- 3c. Select the primary key, amount, and payment date columns from the payment table for payments made on 05/27/2005.

	SELECT PAYMENT_ID,AMOUNT,PAYMENT_DATE FROM PAYMENT WHERE PAYMENT_DATE='2005-05-27';

-- 3d. Select all columns from the customer table for rows that have a last names beginning with S and a first names ending with N.

	SELECT * FROM CUSTOMER WHERE FIRST_NAME LIKE '%N' AND LAST_NAME LIKE 'S%';

--3e. Select all columns from the customer table for rows where the customer is inactive or has a last name beginning with "M".

	SELECT * FROM CUSTOMER WHERE ACTIVE = 0 OR LAST_NAME LIKE 'M%';

-- 3f. Select all columns from the category table for rows where the primary key is greater than 4 and the name field begins with either C, S or T.

	SELECT * FROM CATEGORY WHERE CATEGORY_ID>4 AND NAME LIKE 'C%' OR NAME LIKE 'S%' OR NAME LIKE 'T%';

-- 3g. Select all columns minus the password column from the staff table for rows that contain a password.

	SELECT * FROM STAFF WHERE PASSWORD IS NOT NULL;

-- 3h. Select all columns minus the password column from the staff table for rows that do not contain a password.


	SELECT * FROM STAFF WHERE PASSWORD IS NULL;

-- 4a. Select the phone and district columns from the address table for addresses in California, England, Taipei, or West Java.

	SELECT PHONE,DISTRICT FROM ADDRESS WHERE DISTRICT IN('CALIFORNIA','ENGLAND','TAIPEI','WEST JAVA');

-- 4b. Select the payment id, amount, and payment date columns from the payment table for payments made on 05/25/2005, 05/27/2005, and 05/29/2005.

	SELECT PAYMENT_ID,AMOUNT,PAYMENT_DATE FROM PAYMENT WHERE DATE(PAYMENT_DATE) IN('2005-05-25','2005-05-27','2005-05-29');

-- 4c. Select all columns from the film table for films rated G, PG-13 or NC-17.

	SELECT * FROM FILM WHERE RATING IN ('G', 'PG-13', 'NC-17');

-- 5a. Select all columns from the payment table for payments made between midnight 05/25/2005 and 1 second before midnight 05/26/2005.

	SELECT * FROM PAYMENT WHERE TIMESTAMP(PAYMENT_DATE) BETWEEN '2005-05-25 00:00:00' AND '2005-05-26 11:59:59';

-- 5b. Select the following columns from the film table for films where the length of the description is between 100 and 120.
-- COLUMN NAME           Note
-- title                 Exists in film table.
-- description           Exists in film table.
-- release_year          Exists in film table.
-- total_rental_cost     rental_duration * rental_rate

	SELECT TITLE,DESCRIPTION,RELEASE_YEAR,RENTAL_DURATION*RENTAL_RATE AS TOTAL_RENTAL_COST FROM FILM WHERE LENGTH(DESCRIPTION) BETWEEN 100 AND 120;

-- 6a. Select the following columns from the film table for rows where the description begins with "A Thoughtful".
-- Title, Description, Release Year

	SELECT TITLE,DESCRIPTION,RELEASE_YEAR FROM FILM WHERE DESCRIPTION LIKE 'A Thoughtful%';

-- 6b. Select the following columns from the film table for rows where the description ends with the word "Boat".
-- Title, Description, Rental Duration

	SELECT TITLE,DESCRIPTION,RENTAL_DURATION FROM FILM WHERE DESCRIPTION LIKE '%BOAT';

-- 6c. Select the following columns from the film table where the description contains the word "Database" and the length of the film is greater than 3 hours.
-- Title, Length, Description, Rental Rate

	SELECT TITLE,LENGTH,DESCRIPTION,RENTAL_RATE FROM FILM WHERE DESCRIPTION LIKE '%DATABASE%' AND LENGTH>180;

-- 7a. Select all columns from the payment table and only include the first 20 rows.

	SELECT * FROM PAYMENT LIMIT 20;

-- 7b. Select the payment date and amount columns from the payment table for rows where the payment amount is greater than 5, and only select rows whose zero-based index in the result set is between 1000-2000.

	SELECT PAYMENT_DATE,AMOUNT FROM PAYMENT WHERE AMOUNT>5 LIMIT 1000, 1000;

-- 7c. Select all columns from the customer table, limiting results to those where the zero-based index is between 101-200.

	SELECT * FROM CUSTOMER LIMIT 101,100;

-- 8a. Select all columns from the film table and order rows by the length field in ascending order.

	SELECT * FROM FILM ORDER BY LENGTH;

-- 8b. Select all distinct ratings from the film table ordered by rating in descending order.

	SELECT DISTINCT RATING FROM FILM ORDER BY RATING DESC;

-- 8c. Select the payment date and amount columns from the payment table for the first 20 payments ordered by payment amount in descending order.

	SELECT PAYMENT_DATE,AMOUNT FROM PAYMENT ORDER BY PAYMENT_ID ASC,AMOUNT DESC LIMIT 20;

-- 8d. Select the title, description, special features, length, and rental duration columns from the film table for the first 10 films with behind the scenes footage under 2 hours in length and a rental duration between 5 and 7 days, ordered by length in descending order.

	SELECT TITLE,DESCRIPTION,SPECIAL_FEATURES,LENGTH,RENTAL_DURATION FROM FILM WHERE LENGTH<120 AND RENTAL_DURATION BETWEEN 5 AND 7 ORDER BY FILM_ID ASC,LENGTH DESC LIMIT 10;

-- 9a. Select customer first_name/last_name and actor first_name/last_name columns from performing a /left join/ between the customer and actor column on the last_name column in each table.

SELECT c.first_name AS customer_first_name,c.last_name AS customer_last_name,a.first_name AS actor_first_name,a.last_name AS actor_last_name
FROM customer c LEFT JOIN actor a ON c.last_name = a.last_name;

-- 9b. Select the customer first_name/last_name and actor first_name/last_name columns from performing a /right join between the customer and actor column on the last_name column in each table.

	SELECT c.first_name AS customer_first_name,c.last_name AS customer_last_name,a.first_name AS actor_first_name,a.last_name AS actor_last_name
FROM customer c RIGHT JOIN actor a ON c.last_name = a.last_name;

-- 9c. Select the customer first_name/last_name and actor first_name/last_name columns from performing an inner join between the customer and actor column on the last_name column in each table.

	SELECT c.first_name AS customer_first_name,c.last_name AS customer_last_name,a.first_name AS actor_first_name,a.last_name AS actor_last_name
FROM customer c INNER JOIN actor a ON c.last_name = a.last_name;

-- 9d. Select the city name and country name columns from the city table, performing a left join with the country table to get the country name column.

	SELECT city.city AS city_name, country.country AS country_name
FROM city LEFT JOIN country ON city.country_id = country.country_id;

-- 9e. Select the title, description, release year, and language name columns from the film table, performing a left join with the language table to get the "language" column.Label the language.name column as "language".

	SELECT film.title,film.description,film.release_year,language.name AS language
FROM film LEFT JOIN language ON film.language_id = language.language_id;

-- 9f. Select the first_name, last_name, address, address2, city name, district, and postal code columns from the staff table, performing 2 left joins with the address table then the city table to get the address and city related columns.

	SELECT s.first_name,s.last_name,a.address,a.address2,city.city AS city_name,a.district,a.postal_code
FROM staff s LEFT JOIN address a ON s.address_id = a.address_id LEFT JOIN city ON a.city_id = city.city_id;